generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model team {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     user[]
  issues    issue[]
  createdAt DateTime @default(now())
}

model user {
  id             Int       @id @default(autoincrement())
  githubId       String?   @unique
  username       String
  email          String    @unique
  password       String?
  accessToken    String?
  refreshToken   String?
  createdAt      DateTime  @default(now())
  teamId         Int?
  team           team?     @relation(fields: [teamId], references: [id])
  createdIssues  issue[]   @relation("CreatedIssues")
  assignedIssues issue[]   @relation("AssignedIssues")
  comments       comment[] // User can create many comments
}

model issue {
  id           Int       @id @default(autoincrement())
  title        String
  description  String
  status       String    @default("open")
  priority     String    @default("medium")
  createdBy    user      @relation("CreatedIssues", fields: [createdById], references: [id])
  createdById  Int
  assignedTo   user?     @relation("AssignedIssues", fields: [assignedToId], references: [id])
  assignedToId Int?
  teamId       Int?
  team         team?     @relation(fields: [teamId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  comments     comment[] // Issue can have many comments
}

model comment {
  id        Int       @id @default(autoincrement())
  content   String
  user      user      @relation(fields: [userId], references: [id])
  userId    Int
  issue     issue     @relation(fields: [issueId], references: [id], onDelete: Cascade)
  issueId   Int
  parentId  Int? // For threaded comments: ID of the parent comment
  parent    comment?  @relation("CommentReplies", fields: [parentId], references: [id], onDelete: SetNull)
  replies   comment[] @relation("CommentReplies")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
